version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./.env:/app/.env
      - ./app/.env:/app/app/.env
      - workdir:/tmp/workdir
    environment:
      - API_TITLE=FastAPI Video Downloader and Transcription API
      - API_VERSION=1.0.0
      - API_KEY=your-api-key-here
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=${MINIO_BUCKET:-media-bucket}
      - MINIO_SECURE=false
      - URL_EXPIRY_HOURS=24
      # Configurações para resolver problemas com ctranslate2
      - PYTHONMALLOC=malloc
      - CT2_USE_EXPERIMENTAL_PACKED_GEMM=1
      - CT2_VERBOSE=1
      - WORKDIR=/tmp/workdir
      - WHISPER_MODEL=base
      - WHISPER_LANGUAGE=pt
      - WHISPER_COMPUTE_TYPE=float16
    depends_on:
      - minio
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Serviço para criar o bucket inicial
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      - MINIO_BUCKET=${MINIO_BUCKET:-media-bucket}
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/${MINIO_BUCKET} --ignore-existing;
      /usr/bin/mc policy set public myminio/${MINIO_BUCKET};
      exit 0;
      '

volumes:
  minio-data:
  workdir: